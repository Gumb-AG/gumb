// Scripts that should run at the end of the body tag
script(type='module' src='https://unpkg.com/ionicons@4.5.10-0/dist/ionicons/ionicons.esm.js')
script(nomodule='' src='https://unpkg.com/ionicons@4.5.10-0/dist/ionicons/ionicons.js')
script(src='https://cdnjs.cloudflare.com/ajax/libs/three.js/87/three.js')
script(src='https://s3-us-west-2.amazonaws.com/s.cdpn.io/617753/ThreeOrbitControls.js')
script(src='https://rawgit.com/spite/THREE.MeshLine/master/src/THREE.MeshLine.js')
script(src="/assets/javascript/globe.js")

script(src="https://cdnjs.cloudflare.com/ajax/libs/gsap/2.0.2/TweenMax.min.js")
script. 
    window.flow = function() {
        var sizes = ["s", "m", "l"],
            iconLWidth = 256,
            container = document.getElementById("integration-list"),
            icons = document.querySelectorAll("#integration-list img"),
            resizeTimer,
            w,
            h;
        // debounce the re-init so it doesn't totally freak out while draging
        window.addEventListener('resize', resizeDebounce);
        function resizeDebounce() {
            clearTimeout(resizeTimer);
        resizeTimer = setTimeout(init, 250);
        }
        function init() {
            w = container.offsetWidth;
            h = container.offsetHeight;
            icons.forEach(function(icon, i) {
                var size = sizes[Math.ceil(Math.random() * 3) -1];
                TweenMax.set(
                    icon, {
                        attr: {class: size},
                        y: R(50, h - 150),
                        x: R(w, w + 50)
                    }
                );
                animate(icon, i);
            });
    }
    // animate x and y values at different rates
    function animate(element, i) {
        TweenMax.to(
            element,
            R(110,120),
            {
                x: -1500,
                ease: Linear.easeNone,
                repeat:-1,
                delay: -115 / icons.length * i
            }
        );
        TweenMax.to(
            element,
            R(6,16),
            {
                y: '+=50',
                repeat: -1,
                yoyo: true,
                ease: Sine.easeInOut,
                delay: R(-16, -6)
            }
        );
        };
        function R(min,max) {
            return min + Math.random() * (max-min)
        };
        return {
            init: init
        }
    }().init();